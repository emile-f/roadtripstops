{"version":3,"sources":["shared/components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","footerClass","footer","Button","inverse","onClick","danger","LoadingSpinner","asOverlay","src","image","alt","title","address","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/8.995fcd8d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\tconst auth = useContext(AuthContext);\n\tconst [showConfirmModal, setShowConfirmModal] = useState(false);\n\n\tconst showDeleteWarningHandler = () => {\n\t\tsetShowConfirmModal(true);\n\t};\n\n\tconst cancelDeleteHandler = () => {\n\t\tsetShowConfirmModal(false);\n\t};\n\n\tconst confirmDeleteHandler = async () => {\n\t\tsetShowConfirmModal(false);\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n\t\t\t\t'DELETE',\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\tAuthorization: 'Bearer ' + auth.token\n\t\t\t\t}\n\t\t\t);\n\t\t\tprops.onDelete(props.id);\n\t\t} catch (err) {}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t<Modal\n        \t\tshow={showConfirmModal}\n        \t\tonCancel={cancelDeleteHandler}\n    \t\t\theader=\"Are you sure?\"\n        \t\tfooterClass=\"place-item__modal-actions\"\n        \t\tfooter={\n        \t\t\t<React.Fragment>\n        \t\t\t\t<Button inverse onClick={cancelDeleteHandler}>\n              \t\t\t\tCANCEL\n            \t\t\t</Button>\n            \t\t\t<Button danger onClick={confirmDeleteHandler}>\n              \t\t\t\tDELETE\n            \t\t\t</Button>\n          \t\t\t</React.Fragment>\n        \t\t}\n        \t>\n        \t\t<p>\n        \t\tAre you sure you want to delete this place? This cannot be undone.\n        \t\t</p>\n      \t\t</Modal>\n      \t\t<li className=\"place-item\">\n\t\t\t\t<Card className=\"place-item__content\">\n\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t\t<div className=\"place-item__image\">\n\t\t\t\t\t\t<img \n\t\t\t\t\t\tsrc={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} \n\t\t\t\t\t\talt={props.title} \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"place-item__info\">\n\t\t\t\t\t\t<h2>{props.title}</h2>\n\t\t\t\t\t\t<h3>{props.address}</h3>\n\t\t\t\t\t\t<p>{props.description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"place-item__actions\">\n\t\t\t\t\t\t{auth.userId === props.creatorId && (\n\t\t\t\t\t\t\t<Button to={`/places/${props.id}`}>EDIT</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{auth.userId === props.creatorId && (\n\t\t\t\t\t\t\t<Button danger onClick={showDeleteWarningHandler}>\n\t\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</li>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n\tif(props.items.length === 0) {\n\t\treturn (\n\t\t\t<div className=\"place-list center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>No places found. Create one?</h2>\n\t\t\t\t\t<Button to=\"/places/new\">Share Place</Button>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ul className=\"place-list\">\n\t\t\t{props.items.map(place => (\n\t\t\t\t<PlaceItem \n\t\t\t\t\tkey={place.id} \n\t\t\t\t\tid={place.id} \n\t\t\t\t\timage={place.image} \n\t\t\t\t\ttitle={place.title} \n\t\t\t\t\tdescription={place.description} \n\t\t\t\t\taddress={place.address} \n\t\t\t\t\tcreatorId={place.creator}\n\t\t\t\t\tonDelete={props.onDeletePlace}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nconst UserPlaces = () => {\n\tconst [loadedPlaces, setLoadedPlaces] = useState();\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n\tconst userId = useParams().userId;\n\n\tuseEffect(() => {\n\t\tconst fetchPlaces = async () => {\n\t\t\ttry {\n\t\t\t\tconst responseData = await sendRequest(\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n\t\t\t\t);\n\t\t\t\tsetLoadedPlaces(responseData.places);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchPlaces();\n\t}, [sendRequest, userId]);\n\n\tconst placeDeletedHandler = deletedPlaceId => {\n\t\tsetLoadedPlaces(prevPlaces =>\n\t\t\tprevPlaces.filter(place => place.id !== deletedPlaceId)\n\t\t);\n\t};\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t \t<div className=\"center\">\n\t\t\t \t\t<LoadingSpinner />\n\t\t\t \t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedPlaces && (\n\t\t\t\t<PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n\t\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserPlaces;"],"sourceRoot":""}